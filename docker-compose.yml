version: '3.8'
services:
  db:
    image: postgres:15-alpine
    container_name: ebook_store_db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-ebook_store}
      TZ: ${TIME_ZONE:-Asia/Ho_Chi_Minh}  
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-ebook_store}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-24h}
      SSL_MODE: ${SSL_MODE:-disable}
      MAX_DB_CONN: ${MAX_DB_CONN:-20}
      DEBUG_MODE: ${DEBUG_MODE:-true}
      TZ: ${TIME_ZONE:-Asia/Ho_Chi_Minh}
      UPLOAD_ROOT: /app/storage
      DOCKER_NETWORK_ENABLED: true
    ports:
      - "${SERVER_PORT:-8081}:8081"
    volumes:
      - ./backend/seeds/covers:/app/public/uploads/covers
      - ./storage:/app/storage 
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env
    restart: unless-stopped
    
    
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"  # Vite dev server port
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://backend:8081 # URL API calls
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    restart: unless-stopped
 
volumes:
  postgres_data: